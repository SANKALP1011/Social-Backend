{"version":3,"file":"keyVaultClient.js","sourceRoot":"","sources":["../../../../src/generated/keyVaultClient.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,cAAc,MAAM,yBAAyB,CAAC;AAC1D,OAAO,KAAK,gBAAgB,MAAM,2BAA2B,CAAC;AAC9D,OAAO,KAAK,UAAU,MAAM,qBAAqB,CAAC;AAClD,OAAO,KAAK,OAAO,MAAM,kBAAkB,CAAC;AAmC5C,gBAAgB;AAChB,MAAM,OAAO,cAAe,SAAQ,cAAc,CAAC,qBAAqB;IAGtE;;;;OAIG;IACH,YACE,UAAwB,EACxB,OAAsC;;QAEtC,IAAI,UAAU,KAAK,SAAS,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;SAChD;QAED,0CAA0C;QAC1C,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;SACd;QACD,MAAM,QAAQ,GAAiC;YAC7C,kBAAkB,EAAE,iCAAiC;SACtD,CAAC;QAEF,MAAM,cAAc,GAAG,iCAAiC,CAAC;QACzD,MAAM,eAAe,GACnB,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe;YAClE,CAAC,CAAC,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,IAAI,cAAc,EAAE;YACjE,CAAC,CAAC,GAAG,cAAc,EAAE,CAAC;QAE1B,MAAM,mBAAmB,iDACpB,QAAQ,GACR,OAAO,KACV,gBAAgB,EAAE;gBAChB,eAAe;aAChB,EACD,OAAO,EAAE,MAAA,MAAA,OAAO,CAAC,QAAQ,mCAAI,OAAO,CAAC,OAAO,mCAAI,gBAAgB,GACjE,CAAC;QACF,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAE3B,IAAI,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,KAAI,OAAO,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YACzE,MAAM,gBAAgB,GAAsC,OAAO,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;YAClG,MAAM,oCAAoC,GAAG,gBAAgB,CAAC,IAAI,CAChE,CAAC,cAAc,EAAE,EAAE,CACjB,cAAc,CAAC,IAAI;gBACnB,gBAAgB,CAAC,mCAAmC,CACvD,CAAC;YACF,IAAI,CAAC,oCAAoC,EAAE;gBACzC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;oBACzB,IAAI,EAAE,gBAAgB,CAAC,mCAAmC;iBAC3D,CAAC,CAAC;gBACH,IAAI,CAAC,QAAQ,CAAC,SAAS,CACrB,gBAAgB,CAAC,+BAA+B,CAAC;oBAC/C,MAAM,EAAE,GAAG,mBAAmB,CAAC,OAAO,WAAW;oBACjD,kBAAkB,EAAE;wBAClB,2BAA2B,EACzB,UAAU,CAAC,gCAAgC;qBAC9C;iBACF,CAAC,CACH,CAAC;aACH;SACF;QACD,wBAAwB;QACxB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED;;;;;;;;;OASG;IACH,SAAS,CACP,YAAoB,EACpB,UAAkB,EAClB,KAAa,EACb,OAAiC;QAEjC,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,EAC5C,sBAAsB,CACvB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,YAAY,CACV,YAAoB,EACpB,UAAkB,EAClB,OAAoC;QAEpC,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,EAAE,EACrC,yBAAyB,CAC1B,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,YAAY,CACV,YAAoB,EACpB,UAAkB,EAClB,aAAqB,EACrB,OAAoC;QAEpC,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,OAAO,EAAE,EACpD,yBAAyB,CAC1B,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,SAAS,CACP,YAAoB,EACpB,UAAkB,EAClB,aAAqB,EACrB,OAAiC;QAEjC,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,OAAO,EAAE,EACpD,sBAAsB,CACvB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,UAAU,CACR,YAAoB,EACpB,OAAkC;QAElC,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,OAAO,EAAE,EACzB,uBAAuB,CACxB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,iBAAiB,CACf,YAAoB,EACpB,UAAkB,EAClB,OAAyC;QAEzC,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,EAAE,EACrC,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,iBAAiB,CACf,YAAoB,EACpB,OAAyC;QAEzC,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,OAAO,EAAE,EACzB,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,gBAAgB,CACd,YAAoB,EACpB,UAAkB,EAClB,OAAwC;QAExC,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,EAAE,EACrC,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,kBAAkB,CAChB,YAAoB,EACpB,UAAkB,EAClB,OAA0C;QAE1C,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,EAAE,EACrC,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,oBAAoB,CAClB,YAAoB,EACpB,UAAkB,EAClB,OAA4C;QAE5C,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,EAAE,EACrC,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,YAAY,CACV,YAAoB,EACpB,UAAkB,EAClB,OAAoC;QAEpC,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,EAAE,EACrC,yBAAyB,CAC1B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,aAAa,CACX,YAAoB,EACpB,kBAA8B,EAC9B,OAAqC;QAErC,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,kBAAkB,EAAE,OAAO,EAAE,EAC7C,0BAA0B,CAC3B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,cAAc,CACZ,YAAoB,EACpB,QAAgB,EAChB,OAAsC;QAEtC,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,EACnC,2BAA2B,CAC5B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,qBAAqB,CACnB,YAAoB,EACpB,UAAkB,EAClB,QAAgB,EAChB,OAA6C;QAE7C,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC/C,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,qBAAqB,CACnB,YAAoB,EACpB,QAAgB,EAChB,OAA6C;QAE7C,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,EACnC,kCAAkC,CACnC,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,sBAAsB,GAA6B;IACvD,IAAI,EAAE,wBAAwB;IAC9B,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,WAAW,EAAE;QACX,aAAa,EAAE;YACb,KAAK,EAAE,CAAC,OAAO,CAAC;YAChB,IAAI,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;YACzB,WAAW,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;YACvC,gBAAgB,EAAE,CAAC,SAAS,EAAE,kBAAkB,CAAC;SAClD;QACD,MAAM,kCAAO,OAAO,CAAC,mBAAmB,KAAE,QAAQ,EAAE,IAAI,GAAE;KAC3D;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,UAAU,CAAC;IAC/D,gBAAgB,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EAAE,wBAAwB;IAC9B,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,WAAW,CAAC;IAChE,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EAAE,yCAAyC;IAC/C,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,WAAW,EAAE;QACX,aAAa,EAAE;YACb,WAAW,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;YACvC,gBAAgB,EAAE,CAAC,SAAS,EAAE,kBAAkB,CAAC;YACjD,IAAI,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;SAC1B;QACD,MAAM,kCAAO,OAAO,CAAC,sBAAsB,KAAE,QAAQ,EAAE,IAAI,GAAE;KAC9D;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,aAAa;KACzB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,sBAAsB,GAA6B;IACvD,IAAI,EAAE,yCAAyC;IAC/C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,aAAa;KACzB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;IACxD,IAAI,EAAE,UAAU;IAChB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC;IAC/D,aAAa,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC;IACxC,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,iCAAiC;IACvC,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC;IAC/D,aAAa,EAAE,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,WAAW,CAAC;IAChE,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,iBAAiB;IACvB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uBAAuB;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC;IAC/D,aAAa,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC;IACxC,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,+BAA+B;IACrC,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,WAAW,CAAC;IAChE,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,+BAA+B;IACrC,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,WAAW,CAAC;IAChE,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,uCAAuC;IAC7C,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,WAAW,CAAC;IAChE,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EAAE,+BAA+B;IACrC,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,WAAW,CAAC;IAChE,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EAAE,kBAAkB;IACxB,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,WAAW,EAAE;QACX,aAAa,EAAE,EAAE,kBAAkB,EAAE,CAAC,oBAAoB,CAAC,EAAE;QAC7D,MAAM,kCAAO,OAAO,CAAC,uBAAuB,KAAE,QAAQ,EAAE,IAAI,GAAE;KAC/D;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC;IACxC,gBAAgB,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC;IAC/D,aAAa,EAAE,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,QAAQ,CAAC;IAC7D,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC;IAC/D,aAAa,EAAE;QACb,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uBAAuB;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC;IAC/D,aAAa,EAAE,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,QAAQ,CAAC;IAC7D,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  ApiVersion74,\n  KeyVaultClientOptionalParams,\n  SetSecretOptionalParams,\n  SetSecretResponse,\n  DeleteSecretOptionalParams,\n  DeleteSecretResponse,\n  UpdateSecretOptionalParams,\n  UpdateSecretResponse,\n  GetSecretOptionalParams,\n  GetSecretResponse,\n  GetSecretsOptionalParams,\n  GetSecretsResponse,\n  GetSecretVersionsOptionalParams,\n  GetSecretVersionsResponse,\n  GetDeletedSecretsOptionalParams,\n  GetDeletedSecretsResponse,\n  GetDeletedSecretOptionalParams,\n  GetDeletedSecretResponse,\n  PurgeDeletedSecretOptionalParams,\n  RecoverDeletedSecretOptionalParams,\n  RecoverDeletedSecretResponse,\n  BackupSecretOptionalParams,\n  BackupSecretResponse,\n  RestoreSecretOptionalParams,\n  RestoreSecretResponse,\n  GetSecretsNextOptionalParams,\n  GetSecretsNextResponse,\n  GetSecretVersionsNextOptionalParams,\n  GetSecretVersionsNextResponse,\n  GetDeletedSecretsNextOptionalParams,\n  GetDeletedSecretsNextResponse\n} from \"./models\";\n\n/** @internal */\nexport class KeyVaultClient extends coreHttpCompat.ExtendedServiceClient {\n  apiVersion: ApiVersion74;\n\n  /**\n   * Initializes a new instance of the KeyVaultClient class.\n   * @param apiVersion Api Version\n   * @param options The parameter options\n   */\n  constructor(\n    apiVersion: ApiVersion74,\n    options?: KeyVaultClientOptionalParams\n  ) {\n    if (apiVersion === undefined) {\n      throw new Error(\"'apiVersion' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: KeyVaultClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-keyvault-secrets/4.7.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri: options.endpoint ?? options.baseUri ?? \"{vaultBaseUrl}\"\n    };\n    super(optionsWithDefaults);\n\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      const bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n      if (!bearerTokenAuthenticationPolicyFound) {\n        this.pipeline.removePolicy({\n          name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n        });\n        this.pipeline.addPolicy(\n          coreRestPipeline.bearerTokenAuthenticationPolicy({\n            scopes: `${optionsWithDefaults.baseUri}/.default`,\n            challengeCallbacks: {\n              authorizeRequestOnChallenge:\n                coreClient.authorizeRequestOnClaimChallenge\n            }\n          })\n        );\n      }\n    }\n    // Parameter assignments\n    this.apiVersion = apiVersion;\n  }\n\n  /**\n   *  The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure\n   * Key Vault creates a new version of that secret. This operation requires the secrets/set permission.\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param secretName The name of the secret. The value you provide may be copied globally for the\n   *                   purpose of running the service. The value provided should not include personally identifiable or\n   *                   sensitive information.\n   * @param value The value of the secret.\n   * @param options The options parameters.\n   */\n  setSecret(\n    vaultBaseUrl: string,\n    secretName: string,\n    value: string,\n    options?: SetSecretOptionalParams\n  ): Promise<SetSecretResponse> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, secretName, value, options },\n      setSecretOperationSpec\n    );\n  }\n\n  /**\n   * The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an\n   * individual version of a secret. This operation requires the secrets/delete permission.\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param secretName The name of the secret.\n   * @param options The options parameters.\n   */\n  deleteSecret(\n    vaultBaseUrl: string,\n    secretName: string,\n    options?: DeleteSecretOptionalParams\n  ): Promise<DeleteSecretResponse> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, secretName, options },\n      deleteSecretOperationSpec\n    );\n  }\n\n  /**\n   * The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are\n   * not specified in the request are left unchanged. The value of a secret itself cannot be changed.\n   * This operation requires the secrets/set permission.\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param secretName The name of the secret.\n   * @param secretVersion The version of the secret.\n   * @param options The options parameters.\n   */\n  updateSecret(\n    vaultBaseUrl: string,\n    secretName: string,\n    secretVersion: string,\n    options?: UpdateSecretOptionalParams\n  ): Promise<UpdateSecretResponse> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, secretName, secretVersion, options },\n      updateSecretOperationSpec\n    );\n  }\n\n  /**\n   * The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the\n   * secrets/get permission.\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param secretName The name of the secret.\n   * @param secretVersion The version of the secret. This URI fragment is optional. If not specified, the\n   *                      latest version of the secret is returned.\n   * @param options The options parameters.\n   */\n  getSecret(\n    vaultBaseUrl: string,\n    secretName: string,\n    secretVersion: string,\n    options?: GetSecretOptionalParams\n  ): Promise<GetSecretResponse> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, secretName, secretVersion, options },\n      getSecretOperationSpec\n    );\n  }\n\n  /**\n   * The Get Secrets operation is applicable to the entire vault. However, only the base secret\n   * identifier and its attributes are provided in the response. Individual secret versions are not\n   * listed in the response. This operation requires the secrets/list permission.\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param options The options parameters.\n   */\n  getSecrets(\n    vaultBaseUrl: string,\n    options?: GetSecretsOptionalParams\n  ): Promise<GetSecretsResponse> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, options },\n      getSecretsOperationSpec\n    );\n  }\n\n  /**\n   * The full secret identifier and attributes are provided in the response. No values are returned for\n   * the secrets. This operations requires the secrets/list permission.\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param secretName The name of the secret.\n   * @param options The options parameters.\n   */\n  getSecretVersions(\n    vaultBaseUrl: string,\n    secretName: string,\n    options?: GetSecretVersionsOptionalParams\n  ): Promise<GetSecretVersionsResponse> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, secretName, options },\n      getSecretVersionsOperationSpec\n    );\n  }\n\n  /**\n   * The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for\n   * soft-delete. This operation requires the secrets/list permission.\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param options The options parameters.\n   */\n  getDeletedSecrets(\n    vaultBaseUrl: string,\n    options?: GetDeletedSecretsOptionalParams\n  ): Promise<GetDeletedSecretsResponse> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, options },\n      getDeletedSecretsOperationSpec\n    );\n  }\n\n  /**\n   * The Get Deleted Secret operation returns the specified deleted secret along with its attributes.\n   * This operation requires the secrets/get permission.\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param secretName The name of the secret.\n   * @param options The options parameters.\n   */\n  getDeletedSecret(\n    vaultBaseUrl: string,\n    secretName: string,\n    options?: GetDeletedSecretOptionalParams\n  ): Promise<GetDeletedSecretResponse> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, secretName, options },\n      getDeletedSecretOperationSpec\n    );\n  }\n\n  /**\n   * The purge deleted secret operation removes the secret permanently, without the possibility of\n   * recovery. This operation can only be enabled on a soft-delete enabled vault. This operation requires\n   * the secrets/purge permission.\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param secretName The name of the secret.\n   * @param options The options parameters.\n   */\n  purgeDeletedSecret(\n    vaultBaseUrl: string,\n    secretName: string,\n    options?: PurgeDeletedSecretOptionalParams\n  ): Promise<void> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, secretName, options },\n      purgeDeletedSecretOperationSpec\n    );\n  }\n\n  /**\n   * Recovers the deleted secret in the specified vault. This operation can only be performed on a\n   * soft-delete enabled vault. This operation requires the secrets/recover permission.\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param secretName The name of the deleted secret.\n   * @param options The options parameters.\n   */\n  recoverDeletedSecret(\n    vaultBaseUrl: string,\n    secretName: string,\n    options?: RecoverDeletedSecretOptionalParams\n  ): Promise<RecoverDeletedSecretResponse> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, secretName, options },\n      recoverDeletedSecretOperationSpec\n    );\n  }\n\n  /**\n   * Requests that a backup of the specified secret be downloaded to the client. All versions of the\n   * secret will be downloaded. This operation requires the secrets/backup permission.\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param secretName The name of the secret.\n   * @param options The options parameters.\n   */\n  backupSecret(\n    vaultBaseUrl: string,\n    secretName: string,\n    options?: BackupSecretOptionalParams\n  ): Promise<BackupSecretResponse> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, secretName, options },\n      backupSecretOperationSpec\n    );\n  }\n\n  /**\n   * Restores a backed up secret, and all its versions, to a vault. This operation requires the\n   * secrets/restore permission.\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param secretBundleBackup The backup blob associated with a secret bundle.\n   * @param options The options parameters.\n   */\n  restoreSecret(\n    vaultBaseUrl: string,\n    secretBundleBackup: Uint8Array,\n    options?: RestoreSecretOptionalParams\n  ): Promise<RestoreSecretResponse> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, secretBundleBackup, options },\n      restoreSecretOperationSpec\n    );\n  }\n\n  /**\n   * GetSecretsNext\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param nextLink The nextLink from the previous successful call to the GetSecrets method.\n   * @param options The options parameters.\n   */\n  getSecretsNext(\n    vaultBaseUrl: string,\n    nextLink: string,\n    options?: GetSecretsNextOptionalParams\n  ): Promise<GetSecretsNextResponse> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, nextLink, options },\n      getSecretsNextOperationSpec\n    );\n  }\n\n  /**\n   * GetSecretVersionsNext\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param secretName The name of the secret.\n   * @param nextLink The nextLink from the previous successful call to the GetSecretVersions method.\n   * @param options The options parameters.\n   */\n  getSecretVersionsNext(\n    vaultBaseUrl: string,\n    secretName: string,\n    nextLink: string,\n    options?: GetSecretVersionsNextOptionalParams\n  ): Promise<GetSecretVersionsNextResponse> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, secretName, nextLink, options },\n      getSecretVersionsNextOperationSpec\n    );\n  }\n\n  /**\n   * GetDeletedSecretsNext\n   * @param vaultBaseUrl The vault name, for example https://myvault.vault.azure.net.\n   * @param nextLink The nextLink from the previous successful call to the GetDeletedSecrets method.\n   * @param options The options parameters.\n   */\n  getDeletedSecretsNext(\n    vaultBaseUrl: string,\n    nextLink: string,\n    options?: GetDeletedSecretsNextOptionalParams\n  ): Promise<GetDeletedSecretsNextResponse> {\n    return this.sendOperationRequest(\n      { vaultBaseUrl, nextLink, options },\n      getDeletedSecretsNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst setSecretOperationSpec: coreClient.OperationSpec = {\n  path: \"/secrets/{secret-name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecretBundle\n    },\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  requestBody: {\n    parameterPath: {\n      value: [\"value\"],\n      tags: [\"options\", \"tags\"],\n      contentType: [\"options\", \"contentType\"],\n      secretAttributes: [\"options\", \"secretAttributes\"]\n    },\n    mapper: { ...Mappers.SecretSetParameters, required: true }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.vaultBaseUrl, Parameters.secretName],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteSecretOperationSpec: coreClient.OperationSpec = {\n  path: \"/secrets/{secret-name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedSecretBundle\n    },\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.vaultBaseUrl, Parameters.secretName1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateSecretOperationSpec: coreClient.OperationSpec = {\n  path: \"/secrets/{secret-name}/{secret-version}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecretBundle\n    },\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  requestBody: {\n    parameterPath: {\n      contentType: [\"options\", \"contentType\"],\n      secretAttributes: [\"options\", \"secretAttributes\"],\n      tags: [\"options\", \"tags\"]\n    },\n    mapper: { ...Mappers.SecretUpdateParameters, required: true }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.vaultBaseUrl,\n    Parameters.secretName1,\n    Parameters.secretVersion\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst getSecretOperationSpec: coreClient.OperationSpec = {\n  path: \"/secrets/{secret-name}/{secret-version}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecretBundle\n    },\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.vaultBaseUrl,\n    Parameters.secretName1,\n    Parameters.secretVersion\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getSecretsOperationSpec: coreClient.OperationSpec = {\n  path: \"/secrets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecretListResult\n    },\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.maxresults],\n  urlParameters: [Parameters.vaultBaseUrl],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getSecretVersionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/secrets/{secret-name}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecretListResult\n    },\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.maxresults],\n  urlParameters: [Parameters.vaultBaseUrl, Parameters.secretName1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getDeletedSecretsOperationSpec: coreClient.OperationSpec = {\n  path: \"/deletedsecrets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedSecretListResult\n    },\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.maxresults],\n  urlParameters: [Parameters.vaultBaseUrl],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getDeletedSecretOperationSpec: coreClient.OperationSpec = {\n  path: \"/deletedsecrets/{secret-name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedSecretBundle\n    },\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.vaultBaseUrl, Parameters.secretName1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst purgeDeletedSecretOperationSpec: coreClient.OperationSpec = {\n  path: \"/deletedsecrets/{secret-name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.vaultBaseUrl, Parameters.secretName1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst recoverDeletedSecretOperationSpec: coreClient.OperationSpec = {\n  path: \"/deletedsecrets/{secret-name}/recover\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecretBundle\n    },\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.vaultBaseUrl, Parameters.secretName1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst backupSecretOperationSpec: coreClient.OperationSpec = {\n  path: \"/secrets/{secret-name}/backup\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupSecretResult\n    },\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.vaultBaseUrl, Parameters.secretName1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst restoreSecretOperationSpec: coreClient.OperationSpec = {\n  path: \"/secrets/restore\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecretBundle\n    },\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  requestBody: {\n    parameterPath: { secretBundleBackup: [\"secretBundleBackup\"] },\n    mapper: { ...Mappers.SecretRestoreParameters, required: true }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.vaultBaseUrl],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst getSecretsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecretListResult\n    },\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.maxresults],\n  urlParameters: [Parameters.vaultBaseUrl, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getSecretVersionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecretListResult\n    },\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.maxresults],\n  urlParameters: [\n    Parameters.vaultBaseUrl,\n    Parameters.secretName1,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getDeletedSecretsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedSecretListResult\n    },\n    default: {\n      bodyMapper: Mappers.KeyVaultError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.maxresults],\n  urlParameters: [Parameters.vaultBaseUrl, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}