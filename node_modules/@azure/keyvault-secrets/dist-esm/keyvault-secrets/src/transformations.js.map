{"version":3,"file":"transformations.js","sourceRoot":"","sources":["../../../src/transformations.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAGlC,OAAO,EAAE,6BAA6B,EAAE,MAAM,cAAc,CAAC;AAG7D;;;GAGG;AACH,MAAM,UAAU,yBAAyB,CACvC,MAA0C;IAE1C,MAAM,YAAY,GAAG,MAAsB,CAAC;IAC5C,MAAM,mBAAmB,GAAG,MAA6B,CAAC;IAC1D,MAAM,QAAQ,GAAG,6BAA6B,CAAC,YAAY,CAAC,EAAG,CAAC,CAAC;IAEjE,MAAM,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;IAC3C,OAAO,YAAY,CAAC,UAAU,CAAC;IAE/B,MAAM,YAAY,GAAmC;QACnD,KAAK,EAAE,YAAY,CAAC,KAAK;QACzB,IAAI,EAAE,QAAQ,CAAC,IAAI;QACnB,UAAU,EAAE;YACV,SAAS,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO;YAC9B,SAAS,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO;YAC9B,SAAS,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO;YAC9B,OAAO,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO;YAC5B,SAAS,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,SAAS;YAChC,eAAe,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,eAAe;YAC5C,aAAa,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,aAAa;YAExC,EAAE,EAAE,YAAY,CAAC,EAAE;YACnB,WAAW,EAAE,YAAY,CAAC,WAAW;YACrC,IAAI,EAAE,YAAY,CAAC,IAAI;YACvB,OAAO,EAAE,YAAY,CAAC,OAAO;YAE7B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,gBAAgB,EAAE,YAAY,CAAC,GAAG;SACnC;KACF,CAAC;IAEF,IAAI,mBAAmB,CAAC,UAAU,EAAE;QAClC,YAAY,CAAC,UAAU,CAAC,UAAU,GAAG,mBAAmB,CAAC,UAAU,CAAC;QACpE,YAAY,CAAC,UAAU,CAAC,kBAAkB,GAAG,mBAAmB,CAAC,kBAAkB,CAAC;QACpF,YAAY,CAAC,UAAU,CAAC,SAAS,GAAG,mBAAmB,CAAC,WAAW,CAAC;QACpE,YAAY,CAAC,UAAU,GAAG,mBAAmB,CAAC,UAAU,CAAC;QACzD,YAAY,CAAC,kBAAkB,GAAG,mBAAmB,CAAC,kBAAkB,CAAC;QACzE,YAAY,CAAC,SAAS,GAAG,mBAAmB,CAAC,WAAW,CAAC;KAC1D;IAED,IAAI,UAAU,EAAE;QACd,IAAK,UAAkB,CAAC,QAAQ,EAAE;YAChC,OAAQ,YAAY,CAAC,UAAkB,CAAC,QAAQ,CAAC;SAClD;QAED,IAAI,UAAU,CAAC,OAAO,EAAE;YACtB,OAAQ,YAAY,CAAC,UAAkB,CAAC,OAAO,CAAC;SACjD;QAED,IAAI,UAAU,CAAC,OAAO,EAAE;YACtB,OAAQ,YAAY,CAAC,UAAkB,CAAC,OAAO,CAAC;SACjD;QAED,IAAI,UAAU,CAAC,OAAO,EAAE;YACtB,OAAQ,YAAY,CAAC,UAAkB,CAAC,OAAO,CAAC;SACjD;KACF;IAED,OAAO,YAAY,CAAC;AACtB,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { DeletedSecretBundle, SecretBundle } from \"./generated/models\";\nimport { parseKeyVaultSecretIdentifier } from \"./identifier\";\nimport { DeletedSecret, KeyVaultSecret } from \"./secretsModels\";\n\n/**\n * @internal\n * Shapes the exposed {@link KeyVaultKey} based on either a received secret bundle or deleted secret bundle.\n */\nexport function getSecretFromSecretBundle(\n  bundle: SecretBundle | DeletedSecretBundle\n): KeyVaultSecret {\n  const secretBundle = bundle as SecretBundle;\n  const deletedSecretBundle = bundle as DeletedSecretBundle;\n  const parsedId = parseKeyVaultSecretIdentifier(secretBundle.id!);\n\n  const attributes = secretBundle.attributes;\n  delete secretBundle.attributes;\n\n  const resultObject: KeyVaultSecret & DeletedSecret = {\n    value: secretBundle.value,\n    name: parsedId.name,\n    properties: {\n      expiresOn: attributes?.expires,\n      createdOn: attributes?.created,\n      updatedOn: attributes?.updated,\n      enabled: attributes?.enabled,\n      notBefore: attributes?.notBefore,\n      recoverableDays: attributes?.recoverableDays,\n      recoveryLevel: attributes?.recoveryLevel,\n\n      id: secretBundle.id,\n      contentType: secretBundle.contentType,\n      tags: secretBundle.tags,\n      managed: secretBundle.managed,\n\n      vaultUrl: parsedId.vaultUrl,\n      version: parsedId.version,\n      name: parsedId.name,\n      certificateKeyId: secretBundle.kid,\n    },\n  };\n\n  if (deletedSecretBundle.recoveryId) {\n    resultObject.properties.recoveryId = deletedSecretBundle.recoveryId;\n    resultObject.properties.scheduledPurgeDate = deletedSecretBundle.scheduledPurgeDate;\n    resultObject.properties.deletedOn = deletedSecretBundle.deletedDate;\n    resultObject.recoveryId = deletedSecretBundle.recoveryId;\n    resultObject.scheduledPurgeDate = deletedSecretBundle.scheduledPurgeDate;\n    resultObject.deletedOn = deletedSecretBundle.deletedDate;\n  }\n\n  if (attributes) {\n    if ((attributes as any).vaultUrl) {\n      delete (resultObject.properties as any).vaultUrl;\n    }\n\n    if (attributes.expires) {\n      delete (resultObject.properties as any).expires;\n    }\n\n    if (attributes.created) {\n      delete (resultObject.properties as any).created;\n    }\n\n    if (attributes.updated) {\n      delete (resultObject.properties as any).updated;\n    }\n  }\n\n  return resultObject;\n}\n"]}